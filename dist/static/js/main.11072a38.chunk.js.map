{"version":3,"sources":["components/layout/signinnav.js","store/actions/authAction.js","components/layout/signoutnav.js","components/layout/navbar.js","components/dash/notif.js","components/project/summary.js","components/project/list.js","components/dash/dashboard.js","components/project/details.js","components/auth/signin.js","components/auth/signup.js","components/project/create.js","store/actions/projectActions.js","components/layout/btndash.js","components/layout/lgnlinks.js","components/layout/home.js","App.js","serviceWorker.js","store/reducers/authReducers.js","store/reducers/projectReducers.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","Signout","state","firebase","links","uid","isLoaded","Notif","notifications","map","notif","key","id","user","content","moment","time","toDate","fromNow","Summary","project","title","authorFirstName","authorLastName","createdAt","toString","slice","List","projects","Dash","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","signin","email","password","changeHandler","e","setState","target","value","submitHandler","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","signup","firstname","lastname","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","firstName","lastName","create","createProject","history","push","authorID","add","authorId","Date","Dashbtn","Lgnlinks","App","exact","path","component","home","Details","Boolean","window","location","hostname","initState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","AuthIsLoaded","children","useSelector","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"4QAqBeA,cAAQ,MANI,SAACC,GACxB,MAAO,CACHC,QAAS,kBAAMD,GCFZ,SAACA,EAAUE,EAAX,IACcC,EADyB,EAAjBA,eAEhBC,OAAOH,UAAUI,MAAK,WAC3BL,EAAS,CAAEM,KAAM,8BDGdP,EAhBA,SAACQ,GACZ,OACI,wBAAIC,UAAU,SACV,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,mBACJ,4BAAI,uBAAGC,QAASH,EAAMN,SAAlB,YACJ,4BAAI,kBAAC,IAAD,CAASQ,GAAG,IAAID,UAAU,kCAAkCD,EAAMI,QAAQC,eEE3EC,EATC,WACZ,OACI,wBAAIL,UAAU,SACV,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,YACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,WAAZ,aCmBDV,eAPS,SAACe,GACrB,MAAO,CACHV,KAAMU,EAAMC,SAASX,KACrBO,QAASG,EAAMC,SAASJ,WAIjBZ,EApBA,SAACQ,GAAW,IAChBH,EAAiBG,EAAjBH,KAAMO,EAAWJ,EAAXI,QACPK,EAAQZ,EAAKa,IAAM,kBAAC,EAAD,CAAQN,QAASA,IAAa,kBAAC,EAAD,MACvD,OACI,yBAAKH,UAAU,6BACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,mBAAvB,kBACCJ,EAAKc,UAAYF,O,kBCgBnBG,EA1BD,SAACZ,GAAW,IACfa,EAAiBb,EAAjBa,cACP,OACI,yBAAKZ,UAAU,WACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,cAAhB,WACA,4BACKY,GAAiBA,EAAcC,KAAI,SAAAC,GAChC,OACI,wBAAIC,IAAKD,EAAME,IACX,0BAAMhB,UAAU,cAAcc,EAAMG,MACpC,kCAAQH,EAAMI,SACd,yBAAKlB,UAAU,uBACVmB,IAAOL,EAAMM,KAAKC,UAAUC,oBCHtDC,EAZA,SAAC,GAAa,IAAZC,EAAW,EAAXA,QACb,OACI,yBAAKxB,UAAU,QACf,yBAAKA,UAAU,wCACX,0BAAMA,UAAU,cAAcwB,EAAQC,OACtC,0CAAgBD,EAAQE,gBAAxB,IAA0CF,EAAQG,gBAClD,uBAAG3B,UAAU,4BAAb,eAAqDwB,EAAQI,UAAUP,SAASQ,WAAWC,MAAM,EAAE,QCQhGC,EAZF,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACX,OACI,yBAAKhC,UAAU,WACVgC,GAAYA,EAASnB,KAAI,SAAAW,GACtB,OACI,kBAAC,IAAD,CAAMvB,GAAI,YAAYuB,EAAQR,GAAID,IAAOS,EAAQR,IAAI,kBAAC,EAAD,CAASQ,QAASA,U,gBCDrFS,E,uKACQ,IAAD,EACmCC,KAAKnC,MAAtCiC,EADF,EACEA,SAAUpC,EADZ,EACYA,KAAMgB,EADlB,EACkBA,cACvB,OAAIhB,EAAKa,IAEL,yBAAKT,UAAU,uBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,0BACX,kBAAC,EAAD,CAAMgC,SAAUA,KAEpB,yBAAKhC,UAAU,+BACX,kBAAC,EAAD,CAAOY,cAAeA,OARjB,kBAAC,IAAD,CAAUX,GAAG,iB,GAHvBkC,aA2BJC,cACX7C,aAToB,SAACe,GACrB,MAAO,CACH0B,SAAU1B,EAAM+B,UAAUC,QAAQN,SAClCpC,KAAMU,EAAMC,SAASX,KACrBgB,cAAeN,EAAM+B,UAAUC,QAAQ1B,kBAM3C2B,2BAAiB,CACb,CAAEC,WAAY,WAAYC,QAAQ,CAAC,YAAY,SAC/C,CAAED,WAAY,gBAAiBE,MAAO,EAAGD,QAAS,CAAC,OAAO,WAJnDL,CAMbH,GCGaG,cACX7C,aAXoB,SAACe,EAAOqC,GAC5B,IAAM3B,EAAK2B,EAASC,MAAMC,OAAO7B,GAC3BgB,EAAW1B,EAAM+B,UAAUS,KAAKd,SAEtC,MAAO,CACHR,QAFYQ,EAAWA,EAAShB,GAAM,KAGtCpB,KAAMU,EAAMC,SAASX,SAMzB2C,2BAAiB,CACb,CAAEC,WAAY,cAHPJ,EAtCC,SAACrC,GAAU,IACfyB,EAAkBzB,EAAlByB,QACR,OAD0BzB,EAATH,KACRa,IACNe,EAEC,yBAAKxB,UAAU,qBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,cAAcwB,EAAQC,OACtC,2BAAID,EAAQN,UAGhB,yBAAKlB,UAAU,8BACX,4CAAkBwB,EAAQE,gBAA1B,IAA4CF,EAAQG,gBACpD,4CAAkBH,EAAQI,UAAUP,SAASQ,WAAWC,MAAM,EAAE,QAOxE,yBAAK9B,UAAU,oBACX,iDApBS,kBAAC,IAAD,CAAUC,GAAG,gBCHzB8C,EAAb,4MACIzC,MAAQ,CACJ0C,MAAO,GACPC,SAAU,IAHlB,EAKIC,cAAgB,SAACC,GACb,EAAKC,SAAL,eACKD,EAAEE,OAAOrC,GAAKmC,EAAEE,OAAOC,SAPpC,EAUIC,cAAgB,SAACJ,GACbA,EAAEK,iBACF,EAAKzD,MAAM0D,OAAO,EAAKnD,QAZ/B,uDAcc,IAAD,EACuB4B,KAAKnC,MAAzB2D,EADH,EACGA,UACR,OAFK,EACc9D,KACXa,IAAY,kBAAC,IAAD,CAAUR,GAAG,MAE7B,yBAAKD,UAAU,aACX,0BAAMA,UAAU,QAAQ2D,SAAUzB,KAAKqB,eACnC,uCACA,yBAAKvD,UAAU,eACX,2BAAO4D,QAAQ,SAAf,SACA,2BAAO9D,KAAK,QAAQkB,GAAG,QAAQ6C,SAAU3B,KAAKgB,iBAElD,yBAAKlD,UAAU,eACX,2BAAO4D,QAAQ,YAAf,YACA,2BAAO9D,KAAK,WAAWkB,GAAG,WAAW6C,SAAU3B,KAAKgB,iBAExD,yBAAKlD,UAAU,eACX,4BAAQA,UAAU,qBAAlB,UAIJ,yBAAKA,UAAU,mBACV0D,EAAY,2BAAIA,GAAiB,YAnC1D,GAA4BvB,aA0Db5C,eAfS,SAACe,GACrB,MAAM,CACFoD,UAAWpD,EAAMV,KAAK8D,UACtB9D,KAAMU,EAAMC,SAASX,SAIF,SAACJ,GACxB,MAAO,CACHiE,OAAQ,SAACK,GAAD,OAAWtE,GRzDJuE,EQ0DJD,ERzDR,SAACtE,EAAUE,EAAX,IACcC,EADyB,EAAjBA,eAEhBC,OAAOoE,2BACZD,EAAYf,MACZe,EAAYd,UACdpD,MAAK,WACHL,EAAS,CAACM,KAAM,qBACjBmE,OAAM,SAACC,GACN1E,EAAS,CAACM,KAAM,cAAeoE,cATrB,IAACH,MQ+DRxE,CAA6CwD,GC1D/CoB,EAAb,4MACI7D,MAAQ,CACJ0C,MAAO,GACPC,SAAU,GACVmB,UAAW,GACXC,SAAU,IALlB,EAOInB,cAAgB,SAACC,GACb,EAAKC,SAAL,eACKD,EAAEE,OAAOrC,GAAKmC,EAAEE,OAAOC,SATpC,EAYIC,cAAgB,SAACJ,GACbA,EAAEK,iBACF,EAAKzD,MAAMuE,OAAO,EAAKhE,QAd/B,uDAgBc,IAAD,EACqB4B,KAAKnC,MAAxBH,EADF,EACEA,KAAM8D,EADR,EACQA,UACb,OAAG9D,EAAKa,IAAY,kBAAC,IAAD,CAAUR,GAAG,MAE7B,yBAAKD,UAAU,aACX,0BAAMA,UAAU,QAAQ2D,SAAUzB,KAAKqB,eACnC,uCACA,yBAAKvD,UAAU,eACX,2BAAO4D,QAAQ,SAAf,SACA,2BAAO9D,KAAK,QAAQkB,GAAG,QAAQ6C,SAAU3B,KAAKgB,iBAElD,yBAAKlD,UAAU,eACX,2BAAO4D,QAAQ,YAAf,YACA,2BAAO9D,KAAK,WAAWkB,GAAG,WAAW6C,SAAU3B,KAAKgB,iBAExD,yBAAKlD,UAAU,eACX,2BAAO4D,QAAQ,aAAf,aACA,2BAAO9D,KAAK,OAAOkB,GAAG,YAAY6C,SAAU3B,KAAKgB,iBAErD,yBAAKlD,UAAU,eACX,2BAAO4D,QAAQ,YAAf,YACA,2BAAO9D,KAAK,OAAOkB,GAAG,WAAW6C,SAAU3B,KAAKgB,iBAEpD,yBAAKlD,UAAU,eACX,4BAAQA,UAAU,qBAAlB,aAGA,yBAAKA,UAAU,mBACV0D,EAAY,2BAAIA,GAAe,aA5C5D,GAA4BvB,aAkEb5C,eAbS,SAACe,GACrB,MAAO,CACHV,KAAMU,EAAMC,SAASX,KACrB8D,UAAWpD,EAAMV,KAAK8D,cAIH,SAAClE,GACxB,MAAM,CACF8E,OAAQ,SAACC,GAAD,OAAa/E,ET5CP,SAAC+E,GACnB,OAAO,SAAC/E,EAAUE,EAAX,GAAsD,IAAhCC,EAA+B,EAA/BA,YAAa6E,EAAkB,EAAlBA,aAChCjE,EAAWZ,IACX0C,EAAYmC,IAElBjE,EAASX,OAAO6E,+BACZF,EAAQvB,MACRuB,EAAQtB,UACVpD,MAAK,SAAC6E,GACJ,OAAOrC,EAAUG,WAAW,SAASmC,IAAID,EAAKzD,KAAKR,KAAKmE,IAAI,CACxDC,UAAWN,EAAQH,UACnBU,SAAUP,EAAQF,SAClBjE,SAAUmE,EAAQH,UAAU,GAAGG,EAAQF,SAAS,QAErDxE,MAAK,WACJL,EAAS,CAACM,KAAM,sBACjBmE,OAAM,SAACC,GACN1E,EAAS,CAACM,KAAM,eAAgBoE,YS2BNI,CAAOC,QAI9BhF,CAA6C4E,G,QClE/CY,EAAb,4MACIzE,MAAQ,CACJmB,MAAO,GACPP,QAAS,IAHjB,EAKIgC,cAAgB,SAACC,GACb,EAAKC,SAAL,eACKD,EAAEE,OAAOrC,GAAKmC,EAAEE,OAAOC,SAPpC,EAUIC,cAAgB,SAACJ,GACbA,EAAEK,iBAEF,EAAKzD,MAAMiF,cAAc,EAAK1E,OAC9B,EAAKP,MAAMkF,QAAQC,KAAK,MAdhC,uDAkBQ,OADehD,KAAKnC,MAAbH,KACEa,IAEL,yBAAKT,UAAU,aACX,0BAAMA,UAAU,QAAQ2D,SAAUzB,KAAKqB,eACnC,2CACA,yBAAKvD,UAAU,eACX,2BAAO4D,QAAQ,SAAf,SACA,2BAAO9D,KAAK,OAAOkB,GAAG,QAAQ6C,SAAU3B,KAAKgB,iBAEjD,yBAAKlD,UAAU,eACX,2BAAO4D,QAAQ,WAAf,WACA,8BAAU5D,UAAU,uBAAuBgB,GAAG,UAAU6C,SAAU3B,KAAKgB,iBAE3E,yBAAKlD,UAAU,eACX,4BAAQA,UAAU,qBAAlB,aAdK,kBAAC,IAAD,CAAUC,GAAG,iBAlB1C,GAA4BkC,aAsDb5C,eANS,SAACe,GACrB,MAAO,CACHV,KAAMU,EAAMC,SAASX,SARF,SAACJ,GACxB,MAAO,CACHwF,cAAe,SAACxD,GAAD,OAAahC,ECjDP,SAACgC,GAC1B,OAAO,SAAChC,EAAUE,EAAX,GAAuD,EAAhCC,YAAiC,IACrD0C,GAAYmC,EADwC,EAAnBA,gBAEjCrE,EAAUT,IAAWa,SAASJ,QAC9BgF,EAAWzF,IAAWa,SAASX,KAAKa,IAC1C4B,EAAUG,WAAW,YAAY4C,IAAjC,2BACO5D,GADP,IAEIE,gBAAiBvB,EAAQ0E,UACzBlD,eAAgBxB,EAAQ2E,SACxBO,SAAUF,EACVvD,UAAW,IAAI0D,QAChBzF,MAAK,WACJL,EAAS,CAACM,KAAK,cAAe0B,eAC/ByC,OAAM,SAACC,GACN1E,EAAS,CAACM,KAAK,oBAAqBoE,YDmCHc,CAAcxD,QAU5CjC,CAA6CwF,GE/C7CQ,EATC,SAACxF,GACb,OACI,yBAAKC,UAAU,oBACX,wBAAIA,UAAU,cAAd,SAAkCD,EAAMI,QAAQ0E,WAChD,kBAAC,IAAD,CAAM5E,GAAG,cAAa,4BAAQD,UAAU,OAAlB,4BCMnBwF,EAVE,SAACzF,GACd,OACI,yBAAKC,UAAU,oBACX,wBAAIA,UAAU,cAAd,qEACA,kBAAC,IAAD,CAAMC,GAAG,WAAU,4BAAQD,UAAU,OAAlB,UACnB,kBAAC,IAAD,CAAMC,GAAG,WAAU,4BAAQD,UAAU,OAAlB,cCiBhBT,eAPS,SAACe,GACrB,MAAO,CACHV,KAAMU,EAAMC,SAASX,KACrBO,QAASG,EAAMC,SAASJ,WAIjBZ,EApBF,SAACQ,GAAW,IACdH,EAAiBG,EAAjBH,KAAMO,EAAWJ,EAAXI,QACPK,EAAQZ,EAAKa,IAAM,kBAAC,EAAD,CAASN,QAASA,IAAa,kBAAC,EAAD,MACxD,OACI,6BACI,6BAAK,6BAAK,6BAAK,6BACf,wBAAIH,UAAU,qBAAd,iCACA,6BAHJ,IAGW,6BACNJ,EAAKc,UAAYF,MCiBfiF,E,uKAlBX,OACE,kBAAC,IAAD,KACE,yBAAKzF,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0F,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,aAAaC,UAAW3D,IACpC,kBAAC,IAAD,CAAO0D,KAAK,eAAeC,UAAWE,IACtC,kBAAC,IAAD,CAAOH,KAAK,UAAUC,UAAW7C,IACjC,kBAAC,IAAD,CAAO4C,KAAK,UAAUC,UAAWzB,IACjC,kBAAC,IAAD,CAAOwB,KAAK,UAAUC,UAAWb,W,GAZ3B5C,aCEE4D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStD,MACvB,2DClBN,IAAMuD,EAAY,CACdzC,UAAW,MAqCA0C,EAlCK,WAAgC,IAA/B9F,EAA8B,uDAAtB6F,EAAWE,EAAW,uCAC/C,OAAOA,EAAOvG,MACV,IAAK,cACD,OAAO,2BACAQ,GADP,IAEIoD,UAAW,iBAEnB,IAAK,gBAED,OADA4C,QAAQC,IAAI,iBACL,2BACAjG,GADP,IAEIoD,UAAW,OAEnB,IAAK,kBAED,OADA4C,QAAQC,IAAI,kBACLjG,EACX,IAAK,iBAED,OADAgG,QAAQC,IAAI,kBACL,2BACAjG,GADP,IAEIoD,UAAW,OAEnB,IAAK,eAGD,OAFA4C,QAAQC,IAAI,iBACZD,QAAQC,IAAIF,EAAOnC,KACZ,2BACA5D,GADP,IAEIoD,UAAW2C,EAAOnC,IAAIsC,UAE9B,QACI,OAAOlG,IClCb6F,EAAY,CACdnE,SAAU,CACN,CACE,GAAM,EACN,MAAS,gBACT,KAAQ,qKAEV,CACE,GAAM,EACN,MAAS,eACT,KAAQ,qNAEV,CACE,GAAM,EACN,MAAS,oCACT,KAAQ,6KAkBHyE,EAbQ,WAAgC,IAA/BnG,EAA8B,uDAAtB6F,EAAWE,EAAW,uCACpD,OAAQA,EAAOvG,MACb,IAAK,cAEH,OADAwG,QAAQC,IAAI,UAAWF,EAAO7E,SACvBlB,EACT,IAAK,oBAEH,OADAgG,QAAQC,IAAI,eAAgBF,EAAOnC,KAC5B5D,EACT,QACE,OAAOA,I,QChBEoG,EAPKC,YAAgB,CAChC/G,KAAMwG,EACN5E,QAASiF,EACTpE,UAAWuE,mBACXrG,SAAUsG,oB,wCCKZtG,IAASuG,cAXU,CACjBC,OAAQ,0CACRC,WAAY,wCACZC,YAAa,+CACbC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIjB/G,IAAS8B,YAAYkF,SAAS,CAACC,uBAAuB,IAEvCjH,I,EAAAA,IAAf,ECFIkH,EAAQC,YACVhB,EACAtE,YACIuF,YAAgBC,IAAMC,kBAAkB,CAAErD,4BAAc7E,6BACxDmI,yBAAevH,IAAUwH,KAW3BC,GAAQ,GACVzH,aACA0H,OAAQF,GAFE,uBAPe,CACzBG,YAAa,QACbC,wBAAwB,EACxBC,wBAAwB,EACxBC,kBAAkB,IAGR,yBAIAZ,EAAMjI,UAJN,wCAKV8I,2BALU,GAQd,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SACd5I,EAAO6I,aAAY,SAAAnI,GAAK,OAAIA,EAAMC,SAASX,QACjD,OAAKc,mBAASd,GACH4I,EADiB,yBAAKxI,UAAU,UAAf,IAAyB,0DAIzD0I,IAASC,OACL,kBAAC,IAAD,CAAUlB,MAAOA,GACb,kBAAC,6BAA+BO,EAAU,kBAACO,EAAD,KACtC,kBAAC,EAAD,SAIRK,SAASC,eAAe,SL+EtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnJ,MAAK,SAAAoJ,GACJA,EAAaC,gBAEdjF,OAAM,SAAAkF,GACL7C,QAAQ6C,MAAMA,EAAM3C,c","file":"static/js/main.11072a38.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authAction'\r\n\r\nconst Signin = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/create\">Create Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to=\"/\" className=\"btn btn-floating red lighten-2\">{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Signin)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({type: 'LOGIN_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({type: 'LOGIN_ERROR', err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS'})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstname,\r\n                lastName: newUser.lastname,\r\n                initials: newUser.firstname[0]+newUser.lastname[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Signout = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n            <li><NavLink to=\"/signin\">Log In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Signout","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Signin from './signinnav'\r\nimport Signout from \"./signoutnav\"\r\nimport {connect} from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const {auth, profile} = props\r\n    const links = auth.uid ? <Signin profile={profile}/> : <Signout />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo left\">Project Portal</Link>\r\n                {auth.isLoaded && links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notif = (props) => {\r\n    const {notifications} = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifis</span>\r\n                    <ul>\r\n                        {notifications && notifications.map(notif => {\r\n                            return (\r\n                                <li key={notif.id}>\r\n                                    <span className=\"green-text\">{notif.user}</span>\r\n                                    <span> {notif.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(notif.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notif","import React from 'react'\r\n\r\nconst Summary =({project})=>{\r\n    return(\r\n        <div className=\"card\">\r\n        <div className=\"card-content grey-text text-darken-3\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>Posted by : {project.authorFirstName} {project.authorLastName}</p>\r\n            <p className=\"grey-text text-lighten-2\">Posted on : {project.createdAt.toDate().toString().slice(0,24)}</p>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Summary","import React from 'react'\r\nimport Summary from \"./summary\"\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst List = ({projects}) => {\r\n    return (\r\n        <div className=\"section\">\r\n            {projects && projects.map(project => {\r\n                return(\r\n                    <Link to={'/project/'+project.id} key = {project.id}><Summary project={project} /></Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List","import React, { Component } from 'react'\r\nimport Notif from \"./notif\"\r\nimport List from \"../project/list\"\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Dash extends Component{\r\n    render() {\r\n        const {projects, auth, notifications} = this.props\r\n        if(!auth.uid) return <Redirect to='/signin/' />\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6 projectlist\">\r\n                        <List projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1 notifs\">\r\n                        <Notif notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst MapStatetoProps = (state) => {\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(MapStatetoProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy:['createdAt','desc'] },\r\n        { collection: 'notifications', limit: 5, orderBy: ['time','desc']}\r\n    ])\r\n)(Dash)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst Details = (props) =>{\r\n    const { project, auth } = props\r\n    if(!auth.uid) return <Redirect to='/signin/' />\r\n    if(project) {\r\n        return(\r\n        <div className=\"container section\">\r\n            <div className=\"card\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">{project.title }</span>\r\n                    <p>{project.content}</p>\r\n\r\n                </div>\r\n                <div className=\"card-action grey lighten-2\">\r\n                    <div>Posted by : {project.authorFirstName} {project.authorLastName}</div>\r\n                    <div>Posted on : {project.createdAt.toDate().toString().slice(0,24)}</div> \r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }else{\r\n        return(\r\n            <div className=\"container center\">\r\n                <p>Loading Project..</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(Details)","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../store/actions/authAction'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nexport class signin extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n    changeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        this.props.signIn(this.state)\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props\r\n        if(auth.uid) return <Redirect to=\"/\" />\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.submitHandler}>\r\n                    <h3>Sign In</h3>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.changeHandler}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.changeHandler}></input>\r\n                    </div>\r\n                    <div className=\"input field\">\r\n                        <button className=\"btn red lighten-2\">\r\n                            Login\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p>{authError}</p> : null }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(\r\n            signIn(creds)\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(signin)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {signUp} from '../../store/actions/authAction'\r\n\r\nexport class signup extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        firstname: \"\",\r\n        lastname: \"\"\r\n    }\r\n    changeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const {auth, authError} = this.props\r\n        if(auth.uid) return <Redirect to=\"/\" />\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.submitHandler}>\r\n                    <h3>Sign Up</h3>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.changeHandler}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.changeHandler}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstname\">Firstname</label>\r\n                        <input type=\"text\" id=\"firstname\" onChange={this.changeHandler}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastname\">Lastname</label>\r\n                        <input type=\"text\" id=\"lastname\" onChange={this.changeHandler}></input>\r\n                    </div>\r\n                    <div className=\"input field\">\r\n                        <button className=\"btn red lighten-2\">\r\n                            Register!\r\n                        </button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p>:null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(signup)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { createProject } from \"../../store/actions/projectActions\"\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nexport class create extends Component {\r\n    state = {\r\n        title: \"\",\r\n        content: \"\"\r\n    }\r\n    changeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        //console.log(this.state)\r\n        this.props.createProject(this.state)\r\n        this.props.history.push(\"/\")\r\n    }\r\n    render() {\r\n        const {auth} = this.props\r\n        if(!auth.uid) return <Redirect to='/signin/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.submitHandler}>\r\n                    <h3>New Project</h3>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.changeHandler}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.changeHandler}></textarea>\r\n                    </div>\r\n                    <div className=\"input field\">\r\n                        <button className=\"btn red lighten-2\">\r\n                            Create\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(create)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile\r\n        const authorID = getState().firebase.auth.uid\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorID,\r\n            createdAt: new Date()\r\n        }).then(()=> {\r\n            dispatch({type:\"ADD_PROJECT\", project})\r\n        }).catch((err) => {\r\n            dispatch({type:\"ADD_PROJECT_ERROR\", err})\r\n        })\r\n    }\r\n};","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Dashbtn = (props) => {\r\n    return(\r\n        <div className=\"container center\">\r\n            <h4 className=\"text-white\">Hello {props.profile.firstName}</h4>\r\n            <Link to=\"/dashboard\"><button className=\"btn\">Proceed to Dashboard!</button></Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashbtn","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Lgnlinks = (props) => {\r\n    return(\r\n        <div className=\"container center\">\r\n            <h4 className=\"text-white\">Hello! Seems like you aren't logged in. Please log in or sign up!</h4>\r\n            <Link to=\"/signin\"><button className=\"btn\">Login</button></Link>\r\n            <Link to=\"/signup\"><button className=\"btn\">Sign Up</button></Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Lgnlinks","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Dashbtn from './btndash'\r\nimport Lgnlinks from './lgnlinks'\r\n\r\nconst home = (props) => {\r\n    const {auth, profile} = props\r\n    const links = auth.uid ? <Dashbtn profile={profile}/> : <Lgnlinks /> \r\n    return(\r\n        <div>\r\n            <br/><br/><br/><br/>\r\n            <h2 className=\"center text-white\">Welcome to the Project Portal</h2>\r\n            <br /> <br/>\r\n            {auth.isLoaded && links}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(home)","import React, {Component} from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Navbar from \"./components/layout/navbar\"\nimport Dash from './components/dash/dashboard';\nimport Details from \"./components/project/details\"\nimport signin from './components/auth/signin';\nimport signup from './components/auth/signup';\nimport create from './components/project/create';\nimport home from './components/layout/home'\n\nclass App extends Component{\n  render() {\n    return(\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={home}></Route>\n            <Route path=\"/dashboard\" component={Dash}></Route>\n            <Route path=\"/project/:id\" component={Details}></Route>\n            <Route path=\"/signin\" component={signin}></Route>\n            <Route path=\"/signup\" component={signup}></Route>\n            <Route path=\"/create\" component={create}></Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            return {\r\n                ...state,\r\n                authError: 'Login Failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log(\"login success\")\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log(\"logout success\")\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('Signup success')\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup failed')\r\n            console.log(action.err)\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects: [\r\n        {\r\n          \"id\": 1,\r\n          \"title\": \"sunt aut face\",\r\n          \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"title\": \"qui est esse\",\r\n          \"body\": \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\r\n        },\r\n        {\r\n          \"id\": 3,\r\n          \"title\": \"ea molestias quasi exercitationem\",\r\n          \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_PROJECT':\r\n      console.log(\"created\", action.project)\r\n      return state;\r\n    case 'ADD_PROJECT_ERROR':\r\n      console.log(\"Create error\", action.err)\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default projectReducer","import authReducer from \"./authReducers\"\r\nimport projectReducer from \"./projectReducers\"\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport {combineReducers} from 'redux'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAPHaBIV1LJRt6EJe_CrPmZN67XTXkD7Yk\",\r\n    authDomain: \"project-manager-e35e0.firebaseapp.com\",\r\n    databaseURL: \"https://project-manager-e35e0.firebaseio.com\",\r\n    projectId: \"project-manager-e35e0\",\r\n    storageBucket: \"project-manager-e35e0.appspot.com\",\r\n    messagingSenderId: \"464736847507\",\r\n    appId: \"1:464736847507:web:28971503c98745f6126f66\",\r\n    measurementId: \"G-52MR5C32KP\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings({timestampsInSnapshots: true})\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore'\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\nimport firebase from 'firebase/app'\nimport { useSelector  } from 'react-redux'\nimport { isLoaded  } from 'react-redux-firebase'\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n        reduxFirestore(firebase, fbConfig)\n    )\n);\n\nconst profileSpecificProps = {\n    userProfile: 'users',\n    useFirestoreForProfile: true,\n    enableRedirectHandling: false,\n    resetBeforeLogin: false\n}\n\nconst rrfProps = {\n    firebase,\n    config: fbConfig,\n    config: profileSpecificProps,\n    dispatch: store.dispatch,\n    createFirestoreInstance\n};\n\nfunction AuthIsLoaded({ children }) {\n    const auth = useSelector(state => state.firebase.auth)\n    if (!isLoaded(auth)) return <div className=\"center\"> <p>Loading Project Manager...</p></div>;\n        return children\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rrfProps}><AuthIsLoaded>\n            <App />\n        </AuthIsLoaded>\n        </ReactReduxFirebaseProvider>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n\nserviceWorker.unregister(); "],"sourceRoot":""}